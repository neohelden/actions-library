name: Build and Test
description: Builds and tests code using yarn

inputs:
  sonar-token:
    description: "Token used for pushing test results to SonarCloud.io"
    required: true
  github-token:
    description: "Token used for accessing GitHub.com"
    required: true
  sonar-project-base-dir:
    description: Use this property when you need the analysis to take place in a directory other than the one from which it was launched.
    default: ./
    required: false
  sonar-organization:
    description: The key of the organization to which the project belongs.
    default: neohelden
    required: false
  sonar-projectKey:
    description: The project's unique key. Allowed characters are letters, numbers, -, _, . and :, with at least one non-digit.
    default: ${{ github.event.repository.name }}
    required: false
  sonar-sources:
    description: Comma-separated paths to directories containing main source files.
    default: src/
    required: false
  sonar-inclusions:
    description: Comma-delimited path matching patterns defining files to be included in analysis, among those found below directories specified in `sonar.sources`.
    default: "**/*.ts"
    required: false
  sonar-exclusions:
    description: Comma-delimited path matching patterns defining files to be excluded from analysis, among those found below the directories specified in `sonar.sources`.
    default: "**/*.test.ts"
    required: false
  sonar-tests:
    description: Holds a comma-delimited list of directories (not a path matching pattern) relative to the current working directory.
    default: src/
    required: false
  sonar-test-inclusions:
    description: Comma-delimited path matching patterns defining files to be included in analysis, among those found below directories specified in `sonar.tests`. Applied after `sonar.test.exclusions` and therefore overriding it.
    default: "**/*.test.ts"
    required: false
  sonar-test-exclusions:
    description: Comma-delimited path matching patterns defining files to be excluded from analysis, among those found below the directories specified in `sonar.tests`.
    default: ""
    required: false
  sonar-lcov-reportpaths:
    description: Comma-delimited list of paths to LCOV coverage report files. Paths may be absolute or relative to the project root.
    default: coverage/lcov.info
    required: false
  sonar-verbose:
    description: Debug output for Sonar Scan
    default: "false"
    required: false
  default-branch:
    description: Default development branch of this repository
    default: ${{ github.event.repository.default_branch }}
    required: false
  tsconfig-build-file:
    description: tsconfig file used for building the project.
    default: tsconfig.build.json
    required: false
  prettier-source-paths:
    description: Comma separated list of paths/patterns used by prettier to check
    default: src/**/*.ts
    required: false
  eslint-ext-patterns:
    description: Comma separated list of file patterns eslint will check
    default: .js,.jsx,.ts,.tsx
    required: false
  eslint-configuration-file:
    description: Configuration file used by 'eslint'
    default: .eslintrc
    required: false

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 ## fix shallow clone detected by SonarCloud.io

    - name: Resolve yarn dependencies
      run: |
        FILE=yarn.lock
        if [ -f "$FILE" ]
        then
          yarn --frozen-lockfile 
        else
          echo "$FILE does not exist - exiting"
          exit 1
        fi
      working-directory: ./
      shell: bash

    - name: Prettier
      run: |
        if [ $(jq -r .devDependencies.prettier package.json) = "null" ] && exit
        then
          echo "'prettier' is not configured for this project - ignoring"
        else
          npx prettier --check "${{ inputs.prettier-source-paths }}"
        fi
      working-directory: ./
      shell: bash

    - name: ESLint
      run: |
        FILE=${{ inputs.eslint-configuration-file }}
        if [ -f "$FILE" ]
        then
          npx eslint . --ext ${{ inputs.eslint-ext-patterns }}
        else
          echo "'${{ inputs.eslint-configuration-file }}' does not exist - ignoring"
        fi
      working-directory: ./
      shell: bash

    - name: Build
      run: |
        FILE=${{ inputs.tsconfig-build-file }}

        if [ -f "$FILE" ]
        then
          npx tsc -p "$FILE"
        else
          echo "$FILE does not exist - ignoring"
        fi
      working-directory: ./
      shell: bash

    - name: Test
      run: |
        if [ $(jq -r .devDependencies.jest package.json) = "null" ] && exit
        then
          echo "'jest' is not configured for this project - ignoring"
        else
          npx jest --ci --coverage --detectOpenHandles
        fi
      working-directory: ./
      shell: bash

    - name: Prepare SonarCloud
      run: |
        if ! [[ $GITHUB_HEAD_REF == dependabot/* ]]
        then
          curl --include \
            --request POST \
            --header "Content-Type: application/x-www-form-urlencoded" \
            -u ${{ inputs.sonar-token }} \
            -d 'project=neohelden-${{ inputs.sonar-projectKey }}&organization=${{ inputs.sonar-organization }}&name=${{ inputs.sonar-projectKey }}' \
            'https://sonarcloud.io/api/projects/create'

          curl --include \
            --request POST \
            --header "Content-Type: application/x-www-form-urlencoded" \
            -u ${{ inputs.sonar-token }} \
            -d 'project=neohelden-${{ inputs.sonar-projectKey }}&name=${{ inputs.default-branch }}' \
            'https://sonarcloud.io/api/project_branches/rename';
        fi
      shell: bash

    - name: Tree
      shell: bash
      run: |
        sudo apt-get install -y tree
        tree /home/runner/work

    - name: SonarCloud Scan
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONARCLOUD_URL: "https://sonarcloud.io"
      run: |
        if ! [[ $GITHUB_HEAD_REF == dependabot/* ]]
        then
          /usr/bin/docker run --user=0 --name sonar-scanner --workdir /github/workspace --rm \
            -e GITHUB_TOKEN -e SONAR_TOKEN -e INPUT_PROJECTBASEDIR -e INPUT_ARGS -e HOME -e GITHUB_JOB -e GITHUB_REF -e GITHUB_SHA  \
            -e GITHUB_REPOSITORY -e GITHUB_REPOSITORY_OWNER -e GITHUB_RUN_ID -e GITHUB_RUN_NUMBER -e GITHUB_RETENTION_DAYS -e GITHUB_RUN_ATTEMPT \
            -e GITHUB_ACTOR -e GITHUB_WORKFLOW -e GITHUB_HEAD_REF -e GITHUB_BASE_REF -e GITHUB_EVENT_NAME -e GITHUB_SERVER_URL \
            -e GITHUB_API_URL -e GITHUB_GRAPHQL_URL -e GITHUB_WORKSPACE -e GITHUB_ACTION -e GITHUB_EVENT_PATH -e GITHUB_ACTION_REPOSITORY \
            -e GITHUB_ACTION_REF -e GITHUB_PATH -e GITHUB_ENV -e GITHUB_ACTION_PATH -e RUNNER_OS -e RUNNER_NAME -e RUNNER_TOOL_CACHE \
            -e RUNNER_TEMP -e RUNNER_WORKSPACE -e ACTIONS_RUNTIME_URL -e ACTIONS_RUNTIME_TOKEN -e ACTIONS_CACHE_URL \
            -e SONAR_TOKEN \
            -e GITHUB_ACTIONS=true -e CI=true -v "/var/run/docker.sock":"/var/run/docker.sock" \
            -v "/home/runner/work/_temp/_github_home":"/github/home" \
            -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" \
            -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands" \
            -v "/home/runner/work":"/home/runner/work" \
            -v "$(pwd)":"/github/workspace" \
            sonarsource/sonar-scanner-cli:4.6 \
            -Dsonar.projectBaseDir=${{ inputs.sonar-project-base-dir }} -Dsonar.host.url=${SONARCLOUD_URL} \
            -Dsonar.organization=${{ inputs.sonar-organization }} \
            -Dsonar.projectKey=neohelden-${{ inputs.sonar-projectKey }} \
            -Dsonar.javascript.lcov.reportPaths=${{ inputs.sonar-lcov-reportpaths }} \
            -Dsonar.sources=${{ inputs.sonar-sources }} \
            -Dsonar.inclusions=${{ inputs.sonar-inclusions }} \
            -Dsonar.exclusions=${{ inputs.sonar-exclusions }} \
            -Dsonar.tests=${{ inputs.sonar-tests }} \
            -Dsonar.test.exclusions=${{ inputs.sonar-test-exclusions }} \
            -Dsonar.test.inclusions=${{ inputs.sonar-test-inclusions }} \
            -Dsonar.verbose=${{ inputs.sonar-verbose }};
        fi

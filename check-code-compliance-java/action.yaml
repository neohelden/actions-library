name: Check Code Compliance
description: Checks the code and dependencies for compliant licenses

inputs:
  checkout-ref:
    description: Ref to checkout from Git
    default: ${{ github.event.pull_request.head.sha }}
    required: false
  artifact-name:
    description: Name of the artifact. Default is derived from the repo name.
    required: false
    default: ${{ github.event.repository.name }}
  license-exclude-packages:
    description: Semicolon separated list of packages to exclude from the license check
    required: false
  audit-ci-config:
    description: Path to JSON config file used for configuring audit-ci (e.g. for allowing certain CVEs)
    default: "audit-ci.json"
    required: false
  repo-ssh-key:
    description: An SSH Key to load the repo https://github.com/neohelden/global-audit-ci-config
    required: false
  gh-app-id:
    description: Id of a Github App used to trigger follow-up Github Action workflows
    required: true
  gh-app-private-key:
    description: Private key of a Github App used to trigger follow-up Github Action workflows
    required: true

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ inputs.checkout-ref }}

    - name: Copy spelling config
      shell: bash
      run: |
        cp "${{ github.action_path }}/cspell.json" ./.cspell.json
        cp "${{ github.action_path }}/.yamllint.yml" ./.yamllint.yml
        cp "${{ github.action_path }}/.mega-linter.yml" ./.mega-linter.yml
        cp "${{ github.action_path }}/licensed.yml" ./licensed.yml

    # - name: MegaLinter
    #   if: github.event_name == 'pull_request'
    #   id: ml
    #   # You can override MegaLinter flavor used to have faster performances
    #   # More info at https://megalinter.github.io/flavors/
    #   uses: megalinter/megalinter/flavors/java@v5
    #   env:
    #     # All available variables are described in documentation
    #     # https://megalinter.github.io/configuration/
    #     VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'push' && github.ref == github.event.repository.default_branch }} # Validates all source when push on main, else just the git diff with main. Override with true if you always want to lint all sources
    #     GITHUB_TOKEN: ${{ github.token }}
    #     DISABLE_ERRORS: "true"
    # - name: Archive mega linter artifacts
    #   if: (success() || failure()) && github.event_name == 'pull_request'
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: MegaLinter reports
    #     path: |
    #       report
    #       mega-linter.log

    - id: generate_token
      uses: tibdex/github-app-token@v1.4.0
      with:
        app_id: ${{ inputs.gh-app-id }}
        private_key: ${{ inputs.gh-app-private-key }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: "17"
        distribution: "adopt"

    - name: Setup Licensed
      uses: jonabc/setup-licensed@v1
      with:
        version: '3.x'
        github_token: ${{ inputs.github-token }}
    
    - name: Run licensed
      uses: jonabc/licensed-ci@v1
      with:
        github_token: ${{ steps.generate_token.outputs.token }}
        commit_message: "chore(licenses): Auto-update license files"
        config_file: "./licensed.yml"
        workflow: branch
    
    - name: Generate CycloneDX SBOM
      uses: gradle/gradle-build-action@v2
      with:
        arguments: cyclonedxBom --info

    - name: Upload SBOM
      uses: actions/upload-artifact@v2
      with:
        name: BOM - ${{ inputs.artifact-name }}
        path: ./build/reports/bom.xml
        retention-days: 30

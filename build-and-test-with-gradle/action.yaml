name: Build and Test
description: Builds and tests code using gradle

inputs:
  checkout-ref:
    description: Ref to checkout from Git
    default: ${{ github.event.pull_request.head.sha }}
    required: false

  github-token:
    description: Token used for accessing GitHub.com
    required: true
  sonar-token:
    description: "Token used for pushing test results to SonarCloud.io"
    required: true
  sonar-project-base-dir:
    description: Use this property when you need the analysis to take place in a directory other than the one from which it was launched.
    default: ./
    required: false
  sonar-organization:
    description: The key of the organization to which the project belongs to
    default: neohelden
    required: false
  sonar-projectKey:
    description: The project's unique key. Allowed characters are letters, numbers, -, _, . and :, with at least one non-digit.
    default: ${{ github.event.repository.name }}
    required: false
  sonar-branch-name:
    description: Branch name to by analyzed. Must be empty for PR builds.
    default: ${{ github.event.ref }}
    required: false

  default-branch:
    description: Default development branch of this repository
    default: ${{ github.event.repository.default_branch }}
    required: false

runs:
  using: "composite"

  steps:
    - name: Branch name
      id: extract_branch
      run: |
        BRANCH_NAME=${{ inputs.sonar-branch-name }}

        if [ -n "$BRANCH_NAME" ]
        then
          echo "##[set-output name=branch;]-Dsonar.branch.name=$(echo ${BRANCH_NAME#refs/heads/})"
        else
          echo "##[set-output name=branch;]"
        fi
      shell: bash

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 ## fix shallow clone detected by SonarCloud.io
        ref: ${{ inputs.checkout-ref }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: "17"
        distribution: "adopt"

    - name: Check codeform
      uses: gradle/gradle-build-action@v2
      with:
        arguments: spotlessCheck --info

    - name: Compile
      uses: gradle/gradle-build-action@v2
      with:
        arguments: compileJava --info

    - name: Test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: check jacocoTestReport --info

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        check_name: Test Results
        report_individual_runs: "true"
        files: |
          **/build/test-results/test/*.xml
          **/build/integTest-results/*.xml

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Prepare SonarCloud
      if: steps.yarn-deps.outputs.no-yarn != 'true' && steps.test.outputs.coverageExists == 'true'
      run: |
        curl --include \
          --request POST \
          --header "Content-Type: application/x-www-form-urlencoded" \
          -u ${{ inputs.sonar-token }} \
          -d 'project=neohelden-${{ inputs.sonar-projectKey }}&organization=${{ inputs.sonar-organization }}&name=${{ inputs.sonar-projectKey }}' \
          'https://sonarcloud.io/api/projects/create'

        curl --include \
          --request POST \
          --header "Content-Type: application/x-www-form-urlencoded" \
          -u ${{ inputs.sonar-token }} \
          -d 'project=neohelden-${{ inputs.sonar-projectKey }}&name=${{ inputs.default-branch }}' \
          'https://sonarcloud.io/api/project_branches/rename'
      shell: bash

    - name: SonarCloud Scan
      uses: gradle/gradle-build-action@v2
      with:
        arguments: sonarqube --info
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}

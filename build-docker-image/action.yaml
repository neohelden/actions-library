name: "build-docker-image"
description: "Builds and releases a Docker container"

inputs:
  container-verify-cmd:
    description: "Log entry which shows up if the container starts up successfully after build"
    required: true
  image-registry:
    description: url to the container registry where to push container images too
    required: false
    default: registry.neohelden.com
  image-registry-username:
    description: Username used to login at the image registry
    required: true
  image-registry-token:
    description: TOken use to login at the image registry
    required: true
  registry-org:
    description: Organization within the image registry where to push container images too
    required: false
    default: neohelden
  image-name:
    description: Name of the container image. Default is derived from the repo name.
    required: false
    default: ${{ github.event.repository.name }}
  image-tag:
    description: Tag of the container image
    required: false
    default: ${{ github.event.pull_request.head.sha || github.sha }}
  docker-file:
    description: Full path to the Dockerfile
    required: false
    default: ./Dockerfile
  docker-context:
    description: Context used to build the Docker image
    required: false
    default: ./
  platforms:
    description: Comma-separated list of platforms the Docker image gets built for
    required: false
    default: linux/amd64
  docker-push-build-args:
    description: Build Args used when building the Docker image
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - shell: bash
      id: image-name
      run: |
        if [ -n "${{ inputs.image-name }}" ]
        then
          echo "::set-output name=value::$(echo ${{ inputs.image-name }})
        else
          echo "::set-output name=value::$(echo ${{ github.repository }} | awk -F '/' '{print $2}')
        fi

    # use specific commit-sha to be sure this is not changed
    - uses: easimon/maximize-build-space@b4d02c14493a9653fe7af06cc89ca5298071c66e
      with:
        remove-dotnet: "true"
        remove-android: "true"
        remove-haskell: "true"
        build-mount-path: /var/lib/docker

    - shell: bash
      run: sudo service docker restart

    - id: docker_meta
      uses: docker/metadata-action@v3.5.0
      with:
        images: ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}

    - uses: docker/setup-buildx-action@v1

    - shell: bash
      run: |
        if ! [[ $GITHUB_HEAD_REF == dependabot/* ]]
        then
          echo ${{ inputs.image-registry-token }} | docker login ${{ inputs.image-registry }} --username '${{ inputs.image-registry-username }}' --password-stdin
        fi

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.docker-file }}
        tags: |
          ${{ steps.docker_meta.outputs.tags }}
          ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:${{ inputs.image-tag }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:${{ inputs.image-tag }},${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:main,${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:latest,${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:nightly
        cache-to: type=inline
        platforms: ${{ inputs.platforms }}
        load: true
        pull: true
        push: false
        build-args: ${{ inputs.docker-push-build-args }}

    - name: Test Docker image
      shell: bash {0}
      run: |
        docker run -d --rm --name verify ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:${{ inputs.image-tag }}
        counter=0
        until docker logs verify 2>&1 | ${{ inputs.container-verify-cmd }}
        do

          echo "Waiting for container to start up..."
          sleep 5

          docker ps -a 2>&1
          docker logs verify 2>&1

          if [ $counter -gt 20 ]
          then
            echo "Exiting after $counter retries!"
            exit 1
          fi
          
          ((counter++))
        done
        echo "Container started up successfully!"

    - name: Push Docker image
      shell: bash
      run: |
        if ! [[ $GITHUB_HEAD_REF == dependabot/* ]]
        then
          tagsArr=(${{ steps.docker_meta.outputs.tags }} ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:${{ inputs.image-tag }})

          for tag in ${tagsArr[@]}; do
            echo Pushing $tag;
            docker push $tag;
          done;
        fi

    - name: Scan image for vulnerabilities
      uses: azure/container-scan@v0
      with:
        image-name: ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ steps.image-name.outputs.value }}:${{ inputs.image-tag }}

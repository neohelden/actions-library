name: Delete PR Deployment

on:
  workflow_call:
    inputs:
      argo-host:
        description: ArgoCd host
        required: false
        default: https://argocd.dev.clusters.neohelden.com
        type: string
      argo-base-app:
        description: ArgoCD app being used as base for deploying the built container image
        required: false
        default: neap
        type: string
      dev-gitops-base-branch:
        description: Branch within a gitops repositoriy used by ArgoCD
        required: false
        default: main
        type: string

    secrets:
      image-registry-username:
        description: Username used to login at the image registry
        required: true
      image-registry-token:
        description: TOken use to login at the image registry
        required: true
      argocd-auth-token:
        description: Token for authenticating on ArgoCD host
        required: true

jobs:
  ## cannot live in a Composite since that does not support Actions hosted in private registries
  delete:
    name: Delete PR-Deployment
    if: "github.event.action == 'unlabeled' && !contains(github.event.pull_request.labels.*.name, 'deploy') || github.event.action == 'closed'"
    runs-on: ubuntu-latest

    env:
      ARGOCD_AUTH_TOKEN: "${{ secrets.argocd-auth-token }}"
      ARGOCD_USERNAME: ""
      ARGOCD_PASSWORD: ""

    container:
      image: registry.neohelden.com/internal/argocd-action:1.0.2
      credentials:
        username: ${{ secrets.image-registry-username }}
        password: ${{ secrets.image-registry-token }}

    steps:
      - name: Prepare
        id: prepare
        run: |
          for element in $(echo ${{ github.event.repository.name }} | tr "-" "\n" | tr "[:upper:]" "[:lower:]"); do
            abbreviation=$abbreviation"${element:0:1}"
          done

          echo ::set-output name=argocd-suffix::"-$abbreviation-${{ github.event.number }}"

      - name: "Delete PR App"
        run: |
          /argocd delete -h ${{ inputs.argo-host }} \
            -u ${{ env.ARGOCD_USERNAME }} \
            -p ${{ env.ARGOCD_PASSWORD }} \
            -a ${{ inputs.argo-base-app }} \
            --suffix ${{ steps.prepare.outputs.argocd-suffix }} \
            -b ${{ inputs.dev-gitops-base-branch }}

  status-badge:
    runs-on: ubuntu-latest
    if: "contains(github.event.pull_request.body, 'App Deployment') && (!contains(github.event.pull_request.labels.*.name, 'deploy') || github.event.action == 'closed')"
    timeout-minutes: 5
    steps:
      - name: Strip lines
        id: strip-lines
        run: |
          body=$(echo "${{ github.event.pull_request.body }}" | tail -n+4 )
          echo ::set-output name=body::"$body"  
      - name: Comment on PR
        uses: kt3k/update-pr-description@v1.0.1
        with:
          pr_body: |
            ${{ steps.strip-lines.outputs.body }}
          github_token: ${{ secrets.github-token }}
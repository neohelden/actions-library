name: Check Code Compliance
description: Checks the code and dependencies for compliant licenses

inputs:
  artifact-name:
    description: Name of the artifact. Default is derived from the repo name.
    required: false
    default: ${{ github.event.repository.name }}
  license-exclude-packages:
    description: Semicolon separated list of packages to exclude from the license check
    required: false
  audit-ci-config:
    description: Path to JSON config file used for configuring audit-ci (e.g. for allowing certain CVEs)
    default: "audit-ci.json"
    required: false
  repo-ssh-key:
    description: An SSH Key to load the repo https://github.com/neohelden/global-audit-ci-config
    required: false

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: yarn
      working-directory: ./
      shell: bash

    - name: Load global audit-ci config
      shell: bash
      working-directory: /tmp
      env:
        GIT_SSH_COMMAND: "ssh -i /tmp/audit_ci_key -o IdentitiesOnly=yes"
      run: |
        if [ -n "${{ inputs.repo-ssh-key }}" ]
        then
          echo "Getting global-audit-ci-config from git"
          echo "${{ inputs.repo-ssh-key }}" > /tmp/audit_ci_key
          chmod 600 /tmp/audit_ci_key
          git clone git@github.com:neohelden/global-audit-ci-config.git config;

          cd config
          commitMiliseconds=$(git log --format="%at" -- audit-ci.json)
          sevenDaysInThePast=$(date --date '- 7days' +%s)
          
          if [ "$(jq -r .allowlist $FILE)" != "null" ] && \
            [[ $commitMiliseconds -lt $sevenDaysInThePast ]] && \
            exit
          then
            echo "Global audit file 'neohelden/global-audit-ci-config/audit-ci.json' is older than 7 days. Please review and amend!"
            exit 1
          fi

        else
          echo "Creating empty global config"
          mkdir config
          echo '{"allowlist":[]}' > config/audit-ci.json;
        fi
      
        mv config/audit-ci.json /tmp/common_audit_ci.json

    - name: Audit dependencies
      run: |
        LOCAL_FILE=${{ inputs.audit-ci-config }}
        GLOBAL_FILE=/tmp/common_audit_ci.json
        MERGED_FILE=/tmp/audit_ci.rendered.json

        if [ -n "$LOCAL_FILE" ] && \
          [ -f "$LOCAL_FILE" ]
        then
          jq --argjson global "$(cat $GLOBAL_FILE)" \
            --argjson local "$(cat $LOCAL_FILE)" \
            -n '{allowlist: [$global["allowlist"] + $local["allowlist"]]}' > \
            $MERGED_FILE

          echo "Using audit-ci config: $(cat $MERGED_FILE)"
          
          npx audit-ci --high --config=$MERGED_FILE

          commitMiliseconds=$(git log --format="%at" -- $FILE)
          sevenDaysInThePast=$(date --date '- 7days' +%s)

          if [ "$(jq -r .allowlist $LOCAL_FILE)" != "null" ] && \
            [[ $commitMiliseconds -lt $sevenDaysInThePast ]] && \
            exit
          then
            echo "File $LOCAL_FILE is older than 7 days. Please review and amend!"
            exit 1
          fi
        else
          echo "Using audit-ci config: $(cat $GLOBAL_FILE)"
          npx audit-ci --high --config $GLOBAL_FILE
        fi

      shell: bash
      working-directory: ./

    - name: Check Licenses
      working-directory: ./
      shell: bash
      run: |
        npx license-checker \
            --onlyAllow="Python-2.0; \
              MIT; \
              Apache-2.0; \
              BSD-3-Clause; \
              ISC; \
              MIT OR Apache-2.0; \
              BSD-2-Clause; \
              BSD;Apache*; \
              Apache 2.0; \
              Unlicense; \
              CC0-1.0; \
              Public Domain; \
              WTFPL; \
              CC-BY-4.0; \
              VOL" \
            --excludePackages="${{ inputs.license-exclude-packages }}" \
            --excludePrivatePackages \
            --csv \
            --out licenses.csv

    - name: Upload license file
      uses: actions/upload-artifact@v2
      with:
        name: Licenses - ${{ inputs.artifact-name }}
        path: ./licenses.csv
        retention-days: 30

    - name: Generate CycloneDX SBOM
      working-directory: ./
      run: npx @cyclonedx/bom -o bom.xml
      shell: bash

    - name: Upload SBOM
      uses: actions/upload-artifact@v2
      with:
        name: BOM - ${{ inputs.artifact-name }}
        path: ./bom.xml
        retention-days: 30

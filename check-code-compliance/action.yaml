name: Check Code Compliance
description: Checks the code and dependencies for compliant licenses

inputs:
  artifact-name:
    description: Name of the artifact. Default is derived from the repo name.
    required: false
    default: ${{ github.event.repository.name }}
  license-exclude-packages:
    description: Semicolon separated list of packages to exclude from the license check
    required: false
  audit-ci-config:
    description: Path to JSON config file used for configuring audit-ci (e.g. for allowing certain CVEs)
    default: "audit-ci.json"
    required: false
  repo-ssh-key:
    description: An SSH Key to load the repo https://github.com/neohelden/global-audit-ci-config
    required: true

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: yarn
      working-directory: ./
      shell: bash

    - name: Load global audit-ci config
      shell: bash
      working-directory: /tmp
      env:
        GIT_SSH_COMMAND: "ssh -i /tmp/audit_ci_key -o IdentitiesOnly=yes"
      run: |
        echo "${{ inputs.repo-ssh-key }}" >> /tmp/audit_ci_key
        chmod 600 /tmp/audit_ci_key
        git clone git@github.com:neohelden/global-audit-ci-config.git config
        mv config/audit-ci.json /tmp/common_audit_ci.json

    - name: Audit dependencies
      run: |
        FILE=${{ inputs.audit-ci-config }}

        if [ ! -z "$FILE" ] && [ -f "$FILE" ]
        then
          jq --argjson arr1 "$(cat /tmp/common_audit_ci.json)" --argjson arr2 "$(cat $FILE)" -n '{allowlist: [$arr1["allowlist"] + $arr2["allowlist"]]}' > /tmp/audit_ci.rendered.json
          npx audit-ci --high --config=/tmp/audit_ci.rendered.json

          commitMiliseconds=$(git log --format="%at" -- $FILE)
          sevenDaysInThePast=$(date --date '- 7days' +%s)

          if [ "$(jq -r .allowlist $FILE)" != "null" ] && [[ $commitMiliseconds -lt $sevenDaysInThePast ]] && exit
          then
            echo "File $FILE is older than 7 days. Please review and amend!"
            exit 1
          fi
        else
          npx audit-ci --high --config /tmp/common_audit_ci.json
        fi

      shell: bash
      working-directory: ./

    - name: Check Licenses
      working-directory: ./
      shell: bash
      run: |
        npx license-checker \
            --onlyAllow="Python-2.0;MIT;Apache-2.0;BSD-3-Clause;ISC;MIT OR Apache-2.0;BSD-2-Clause;BSD;Apache*;Apache 2.0;Unlicense;CC0-1.0;Public Domain;WTFPL;CC-BY-4.0;VOL" \
            --excludePackages="${{ inputs.license-exclude-packages }}" \
            --excludePrivatePackages \
            --csv --out licenses.csv

    - name: Upload license file
      uses: actions/upload-artifact@v2
      with:
        name: Licenses - ${{ inputs.artifact-name }}
        path: ./licenses.csv
        retention-days: 30

    - name: Generate CycloneDX SBOM
      working-directory: ./
      run: npx @cyclonedx/bom -o bom.xml
      shell: bash

    - name: Upload SBOM
      uses: actions/upload-artifact@v2
      with:
        name: BOM - ${{ inputs.artifact-name }}
        path: ./bom.xml
        retention-days: 30

name: "test-opa-policies"

description: "Tests OPA policies"

inputs:
  checkout-ref:
    description: Ref to checkout from Git
    default: ${{ github.event.pull_request.head.sha }}
    required: false
  paths:
    description: Comma separated list of paths to test
    required: true
  pr-comment-title:
    description: Title of the PR comment
    default: "OPA Policy Test"
    required: false
  comment-on-pr:
    description: "If true, a comment will be added to the PR"
    default: "true"
    required: false


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.checkout-ref }}

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest
        static: "true"

    - name: Run OPA Test
      shell: bash
      run: |
        set -x
        IFS=','
        DIRS=(${{ inputs.paths }})
        FAILED_FILES=()
        SUCCESS_FILES=()
        COVERAGE_RESULTS=()

        
        for dir in ${DIRS}; do
          echo "Checking $dir"

          result="$(opa test -v $dir)"
          
          failed_files="$(echo $result | grep -oP '.*(?=: FAIL)' | sort -u | tr "\\n" "," || true)"
          FAILED_FILES+=($failed_files)
          
          success_files="$(echo $result | grep -oP '.*(?=: PASS)' | sort -u | tr "\\n" "," || true)"
          SUCCESS_FILES+=($success_files)
          
          coverage="$(opa test -v --coverage $dir | jq -r '.coverage')"
          COVERAGE_RESULTS+=($coverage)
        done

        overall_coverage="$(echo ${COVERAGE_RESULTS[@]} | jq -s 'add/length' || true)"

        failed_string=""
        for file in ${FAILED_FILES[@]}; do
          failed_string+="❌ $file\n"
        done

        success_string=""
        for file in ${SUCCESS_FILES[@]}; do
          success_string+="✅ $file\n"
        done

        echo "failed-files<<EOF" >> "$GITHUB_OUTPUT"
        echo "$failed_string" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        echo "success-files<<EOF" >> "$GITHUB_OUTPUT"
        echo "$success_string" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        echo "overall-coverage=$overall_coverage" >> "$GITHUB_OUTPUT"

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v3
      if: ${{ inputs.comment-on-pr == 'true' }} && (success() || failure())
      with:
        comment-tag: opa-test-results
        message: |
          ${{ inputs.pr-comment-title }}
          

          ${{ steps.run-opa.outputs.failed-files }}
          

          Overall Coverage: ${{ steps.run-opa.outputs.overall-coverage }}

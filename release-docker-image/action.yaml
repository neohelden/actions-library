name: "release-docker-image"
description: Tags a Docker Image with released version and signs it using Notary.
inputs:
  image-registry:
    description: Container registry where to push container images too
    required: false
    default: registry.neohelden.com
  image-registry-username:
    description: Username used to login at the image registry
    required: true
  image-registry-token:
    description: TOken use to login at the image registry
    required: true
  registry-org:
    description: Organization within the image registry where to push container images too
    required: false
    default: neohelden
  image-name:
    description: Name of the Docker image.
    required: false
    default: ${{ github.event.repository.name }}
  image-tag-prefix: 
    description: "A prefix for the created image tag"
    required: false
  release-hook:
    description: A webhook url to post notifications about releases against
    required: false

runs:
  using: "composite"
  steps:
    - uses: docker/login-action@v1
      with:
        registry: ${{ inputs.image-registry }}
        username: ${{ inputs.image-registry-username }}
        password: ${{ inputs.image-registry-token }}

    - shell: bash
      run: docker pull ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:${{ github.sha }}

    - shell: bash
      run: |
        docker tag ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:${{ github.sha }} ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:${{ inputs.image-tag-prefix }}${{ github.event.release.tag_name }}
        docker tag ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:${{ github.sha }} ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:latest

        docker push ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:${{ inputs.tag-prefix }}${{ github.event.release.tag_name }}
        docker push ${{ inputs.image-registry }}/${{ inputs.registry-org }}/${{ inputs.image-name }}:latest

    - shell: bash 
      run: |
        if [ ! "${{ inputs.release-hook }}" = "" ]; then
          curl -X POST --data-urlencode "payload={\"username\":\"GhostRider\",\"icon_emoji\":\":ghost:\",\"blocks\":[{\"type\":\"header\",\"text\":{\"type\":\"plain_text\",\"text\":\"New Release of ${{ github.event.repository.name }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Version*: <${{ github.event.release.html_url }} | ${{ github.event.release.tag_name }}> \\n\\n *Notes*: \\n ${{ github.event.release.body }}\"}}]}" ${{ inputs.release-hook }}
        fi